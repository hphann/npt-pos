<div class="container-fluid add-form-list">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between">
                    <div class="header-title">
                        <h4 class="card-title">Tạo hóa đơn</h4>
                    </div>
                </div>
                <div class="card-body">
                    <form id="transactionForm" method="POST" data-toggle="validator">
                        <!-- Thông tin khách hàng -->
                        <fieldset>
                            <legend>Thông tin khách hàng</legend>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Ngày *</label>
                                        <input type="date" class="form-control" id="date" name="date" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Tên khách hàng *</label>
                                        <input type="text" class="form-control" id="customerName" name="customerName" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Số điện thoại *</label>
                                        <input type="tel" class="form-control" id="phone" name="phone" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Địa chỉ *</label>
                                        <input type="text" class="form-control" id="address" name="address" required>
                                    </div>
                                </div>
                            </div>
                        </fieldset>

                        <!-- Thông tin sản phẩm -->
                        <fieldset>
                            <!-- Tìm kiếm sản phẩm -->
                            <div class="row mb-3">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <input id="search-product" type="text" name="q" class="form-control" placeholder="Tìm sản phẩm theo tên hoặc barcode...">
                                        <ul id="search-results" class="list-group mt-1" style="max-height: 200px; overflow-y: auto; display: none; position: absolute; z-index: 1000; width: 100%;"></ul>
                                    </div>
                                </div>
                            </div>

                            <div class="table-responsive rounded mb-3">
                                <table id="productTable" class="table mb-0">
                                    <thead class="bg-white text-uppercase">
                                        <tr>
                                            <th>Ảnh sản phẩm</th>
                                            <th>Sản phẩm</th>
                                            <th>Mã sản phẩm</th>
                                            <th>Giá</th>
                                            <th>Số lượng</th>
                                            <th>Thao tác</th>
                                        </tr>
                                    </thead>
                                    <tbody id="product-list">
                                        <!-- Danh sách sản phẩm -->
                                    </tbody>
                                </table>
                            </div>
                        </fieldset>

                        <!-- Thông tin thanh toán -->
                        <fieldset>
                            <legend>Thanh toán</legend>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Tổng tiền đơn hàng:</label>
                                        <input type="text" id="totalAmount" class="form-control" readonly>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Trạng thái thanh toán:</label>
                                        <select name="paymentStatus" class="form-control" required>
                                            <option value="unpaid">Chưa thanh toán</option>
                                            <option value="paid">Đã thanh toán</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Tổng tiền đã nhận:</label>
                                        <input type="number" id="receivedAmount" name="receivedAmount" class="form-control" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Tiền thừa:</label>
                                        <input type="text" id="changeAmount" class="form-control" readonly>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        
                     <fieldset>
                        <legend>Thông tin nhân viên</legend>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Tên nhân viên:</label>
                                    <input class="form-control" id="employeeName" name="employeeName" value="" required>
                                </div>
                            </div>
                        </div>
                    </fieldset>

                        <!-- Các nút thao tác -->
                        <div class="row">
                            <div class="col-md-12">
                                <button id="createOrderButton" type="submit" class="btn btn-primary mr-2">Tạo hóa đơn</button>
                                <button type="reset" class="btn btn-danger">Hủy</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    // Cập nhật tổng tiền
    const updateTotalAmount = () => {
        const rows = document.querySelectorAll("#product-list tr");
        let total = 0;

        rows.forEach(row => {
            const price = parseFloat(row.querySelector(".product-price").textContent) || 0;
            const quantity = parseInt(row.querySelector(".quantity").value) || 0;
            total += price * quantity;
        });

        document.getElementById("totalAmount").value = total.toFixed(2);
        calculateChange(); // Tự động tính tiền thừa
    };

    // Tính tiền thừa
    const calculateChange = () => {
        const totalAmount = parseFloat(document.getElementById("totalAmount").value) || 0;
        const receivedAmount = parseFloat(document.getElementById("receivedAmount").value) || 0;
        const change = Math.max(receivedAmount - totalAmount, 0); // Chỉ hiển thị số tiền thừa nếu > 0
        document.getElementById("changeAmount").value = change.toFixed(2);
    };

    // Lắng nghe thay đổi số tiền nhận để tính tiền thừa
    document.getElementById("receivedAmount").addEventListener("input", () => {
        calculateChange();
    });

   
    // Xử lý thêm sản phẩm
    document.getElementById("product-list").addEventListener("click", event => {
        if (event.target.classList.contains("btn-remove")) {
            // Hiển thị thông báo xác nhận
            const confirmDelete = confirm("Bạn có chắc chắn muốn xóa sản phẩm này?");
            if (confirmDelete) {
                const row = event.target.closest("tr");
                row.remove();
                updateTotalAmount(); // Cập nhật tổng tiền sau khi xóa sản phẩm
            }
        }
    });

    // Lắng nghe thay đổi số lượng để cập nhật tổng tiền
    document.getElementById("product-list").addEventListener("input", event => {
        if (event.target.classList.contains("quantity")) {
            updateTotalAmount();
        }
    });

    // Tự động điền thông tin khách hàng khi nhập số điện thoại
    document.getElementById("phone").addEventListener("blur", async () => {
        const phone = document.getElementById("phone").value;
        if (phone) {
            try {
                const res = await fetch(`/customer/checkPhoneNumber/${phone}`);
                const data = await res.json();
                if (data.exists) {
                    document.getElementById("customerName").value = data.customer.name || "";
                    document.getElementById("address").value = data.customer.address || "";
                } else {
                    document.getElementById("customerName").value = "";
                    document.getElementById("address").value = "";
                }
            } catch (error) {
                console.error("Lỗi khi lấy thông tin khách hàng:", error);
            }
        }
    });


    // Tìm kiếm sản phẩm
    document.getElementById("search-product").addEventListener("input", async () => {
        const query = document.getElementById("search-product").value.trim();
        const searchResults = document.getElementById("search-results");

        searchResults.innerHTML = ""; // Xóa kết quả trước đó

        if (query.length >= 1) {
            try {
                const res = await fetch(`/api/search?q=${query}`);
                const data = await res.json();

                // Kiểm tra nếu response trả về đúng dữ liệu
                if (data.products && Array.isArray(data.products) && data.products.length > 0) {
                    searchResults.style.display = "block";
                    data.products.forEach(product => {
                        const item = document.createElement("li");
                        item.classList.add("list-group-item", "list-group-item-action", "d-flex", "align-items-center");

                        // Thêm thông tin sản phẩm
                        const text = document.createElement("span");
                        text.textContent = `${product.name} (Barcode: ${product.barcode}) - Giá: ${product.retailPrice}`;

                        // Gắn thông tin vào mục danh sách
                        item.appendChild(text);

                        // Lưu thông tin sản phẩm
                        item.dataset.product = JSON.stringify(product);

                        // Thêm mục vào danh sách kết quả
                        searchResults.appendChild(item);
                    });
                } else {
                    // Hiển thị thông báo nếu không có sản phẩm
                    searchResults.style.display = "block";
                    searchResults.innerHTML = `<li class="list-group-item text-muted">Không tìm thấy sản phẩm</li>`;
                }
            } catch (error) {
                console.error("Lỗi khi tìm kiếm sản phẩm:", error);
            }
        } else {
            searchResults.style.display = "none";
        }
    });

     // Chọn sản phẩm từ danh sách
    document.getElementById("search-results").addEventListener("click", event => {
        const productList = document.getElementById("product-list");
        const productData = event.target.dataset.product;

        if (productData) {
            const product = JSON.parse(productData);

            // Kiểm tra nếu sản phẩm đã tồn tại trong danh sách
            const existingRow = Array.from(productList.children).find(row => 
                row.querySelector("td:nth-child(3)")?.textContent === product.barcode
            );

            if (!existingRow) {
                // Thêm sản phẩm vào danh sách
                const row = `
                    <tr>
                        <td><img src="${product.image}" alt="${product.name}" style="width:50px;height:50px;object-fit:cover;"/></td>
                        <td>${product.name}</td>
                        <td>${product.barcode}</td>
                        <td class="product-price">${product.retailPrice}</td>
                        <td><input type="number" class="form-control quantity" value="1" min="1"></td>
                        <td><button class="btn btn-danger btn-remove">Xóa</button></td>
                    </tr>`;
                productList.insertAdjacentHTML("beforeend", row);

                // Cập nhật tổng tiền ngay khi thêm sản phẩm
                updateTotalAmount();
            }

            // Ẩn danh sách tìm kiếm sau khi chọn
            document.getElementById("search-results").style.display = "none";
            document.getElementById("search-product").value = ""; // Reset ô tìm kiếm
        }
    });



  

document.getElementById("createOrderButton").addEventListener("click", async (event) => {
    // Ngăn hành động mặc định của trình duyệt
    event.preventDefault();

    const customerName = document.getElementById("customerName").value;
    const address = document.getElementById("address").value;
    const phone = document.getElementById("phone").value;
    const employee = "67094c213dd41d9b1fc94a85"; // Bạn có thể lấy giá trị này từ user session hoặc form
    const totalPrice = parseFloat(document.getElementById("totalAmount").value) || 0;
    const receivedAmount = parseFloat(document.getElementById("receivedAmount").value) || 0;
    const orderDate = new Date().toISOString();
    const status = "Completed";

    const orderData = {
        customer: '670a7fbb1b5ec4ea3c6654ea',
        employee,
        totalPrice,
        orderDate,
        receivedAmount,
        status,
    };

    try {
        const res = await fetch('/order/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(orderData),
        });

        const data = await res.json();
        console.log("Đơn hàng đã được tạo >>>>>>>>>>>>>>>>>>>>>>>>:"+data);
        if (data.EC === 0) {
            console.log("Đơn hàng đã được tạo:", data.data);
            alert("Đơn hàng tạo thành công!");
        } else {
            alert("Không thể tạo đơn hàng");
        }
    } catch (error) {
        console.error("Lỗi khi tạo đơn hàng:", error);
        alert("Đã xảy ra lỗi khi tạo đơn hàng!");
    }
});






</script>
